# Generated by Django 3.2.4 on 2021-06-15 13:09

import administration.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_level', models.CharField(max_length=20)),
                ('section', models.CharField(max_length=20)),
                ('no_student', models.IntegerField(default=0)),
                ('room_number', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ('class_level',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=1000)),
                ('query', models.TextField(default='')),
                ('address', models.CharField(default='', max_length=2000)),
                ('phone_no', models.CharField(default='', max_length=50)),
                ('email', models.EmailField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('detail', models.CharField(max_length=1000)),
                ('postby', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=1000)),
                ('grade', models.IntegerField()),
                ('voucher', models.ImageField(blank=True, null=True, upload_to='images')),
                ('date', models.DateTimeField(default='2078-03-01')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(choices=[('', ''), ('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('Type', models.CharField(choices=[('Principle', 'Principle'), ('Vice-Principle', 'Vice-Principle'), ('Accountant', 'Accountant'), ('Teacher', 'Teacher'), ('Piyan', 'Piyan')], max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=10)),
                ('district', models.CharField(default='', max_length=100)),
                ('address', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=1000, null=True)),
                ('image', models.ImageField(upload_to='images/staff/')),
                ('date', models.DateField(default='2078-03-01')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Leave_Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=20)),
                ('reason', models.CharField(max_length=30)),
                ('leave_type', models.CharField(choices=[('sick', 'sick'), ('casual', 'casual')], max_length=20)),
                ('startdate', models.DateField(default='2078-03-01')),
                ('endate', models.DateField(default='2078-03-01')),
                ('received_date', models.DateTimeField(default='2078-03-01')),
                ('approve', models.CharField(choices=[('Pending', 'pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=8)),
            ],
            options={
                'ordering': ('-received_date',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('book_ID', models.CharField(max_length=20, unique=True)),
                ('class_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('Period 1', 'Period 1'), ('Period 2', 'Period 2'), ('Period 3', 'Period 3'), ('Period 4', 'Period 4'), ('Period 5', 'Period 5'), ('Period 6', 'Period 6'), ('Period 7', 'Period 7')], max_length=20)),
                ('day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('Thrusday', 'Thrusday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=30)),
                ('start_time', models.TimeField(default='10:00')),
                ('end_time', models.TimeField(default='10:00')),
                ('class_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.classroom')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjectinroutine', to='administration.subject')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('current_address', models.CharField(max_length=100)),
                ('permanent_address', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=1000)),
                ('roll_no', models.CharField(max_length=10)),
                ('registration_no', models.CharField(max_length=20, unique=True)),
                ('image', models.ImageField(upload_to='images/students/')),
                ('join_date', models.DateField(auto_now=True)),
                ('class_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_room', to='administration.classroom')),
                ('sesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.session')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_principal', models.BooleanField(default=False)),
                ('is_viceprinciple', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=(models.Model, administration.models.UserManager),
            managers=[
                ('objects', administration.models.UserManager()),
            ],
        ),
    ]
